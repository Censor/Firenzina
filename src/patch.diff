diff -u fire-22-old/bits.h fire-22-new/bits.h
--- fire-22-old/bits.h	2013-03-23 13:43:08.000000000 +0000
+++ fire-22-new/bits.h	2013-03-23 16:32:14.000000000 +0000
@@ -23,7 +23,47 @@
 along with this program. If not, see http://www.gnu.org/licenses/.
 */
 
-#if defined(_WIN64)
+
+
+#if defined(__GNUC__)
+
+#include <limits.h>
+#include <stdint.h>
+
+#define INLINE inline
+
+static INLINE int BSR (uint64 w)
+	{
+	int64_t ret = sizeof(uint64) * CHAR_BIT - 1;
+
+	return w ? ret - __builtin_clzll(w) : ret;
+	}
+
+static INLINE int BSF (uint64 w)
+	{
+	return __builtin_ffsll(w) - 1;
+	}
+
+
+#if defined(HasPopCNT)
+static INLINE int POPCNT (uint64 w)
+	{
+	return __builtin_popcountll(w);
+	}
+
+#else
+
+static INLINE int POPCNT (uint64 w)
+{
+  w = w - ((w >> 1) & 0x5555555555555555ull);
+  w = (w & 0x3333333333333333ull) + ((w >> 2) & 0x3333333333333333ull);
+  w = (w + (w >> 4)) & 0x0f0f0f0f0f0f0f0full;
+  return(w * 0x0101010101010101ull) >> 56;
+}
+
+#endif
+
+#elif defined(_WIN64)
 static INLINE int BSR (uint64 w)
 	{
 	uint64 x;
@@ -89,42 +129,5 @@
 	return((u * 0x01010101) >> 24) +((v * 0x01010101) >> 24);
 	}
 
-#endif
-
-#if defined(__GNUC__)
-
-#include <limits.h>
-#include <stdint.h>
-
-static INLINE int BSR (uint64 w)
-	{
-	int64_t ret = sizeof(uint64) * CHAR_BIT - 1;
-
-	return w ? ret - __builtin_clzll(w) : ret;
-	}
-
-static INLINE int BSF (uint64 w)
-	{
-	return __builtin_ffsll(w) - 1;
-	}
-
-
-#if defined(HasPopCNT)
-static INLINE int POPCNT (uint64 w)
-	{
-	return __builtin_popcountll(w);
-	}
-
-#else
-
-static INLINE int POPCNT (uint64 w)
-{
-  w = w - ((w >> 1) & 0x5555555555555555ull);
-  w = (w & 0x3333333333333333ull) + ((w >> 2) & 0x3333333333333333ull);
-  w = (w + (w >> 4)) & 0x0f0f0f0f0f0f0f0full;
-  return(w * 0x0101010101010101ull) >> 56;
-}
-
-#endif
 
 #endif
\ No newline at end of file
diff -u fire-22-old/control.h fire-22-new/control.h
--- fire-22-old/control.h	2013-03-23 12:59:50.000000000 +0000
+++ fire-22-new/control.h	2013-03-23 17:19:44.000000000 +0000
@@ -23,7 +23,7 @@
 along with this program. If not, see http://www.gnu.org/licenses/.
 */
 
-#ifdef WINDOWS
+#if defined(_WIN32) || defined(_WIN64)
 #include <setjmp.h>
 #include <time.h>
 #endif
Only in fire-22-old: fire.c
diff -u fire-22-old/fire.h fire-22-new/fire.h
--- fire-22-old/fire.h	2013-03-23 13:32:42.000000000 +0000
+++ fire-22-new/fire.h	2013-03-23 16:50:34.000000000 +0000
@@ -30,20 +30,26 @@
 
 #define Engine "Fire"
 #define Vers "2.2 xTreme"
-#if defined(__GNUC__) && !defined(__MINGW32__) && !defined(__MINGW64__)
+#if defined(__GNUC__) 
 #define STDIN_FileNO 0
 
 #if defined(__i386__)
-#define Platform "Linux 32"
+#define PLatform "Linux 32"
 #else
-#define Platform "Linux 64"
+#define PLatform "Linux 64"
 #endif
 
 #elif  defined(_WIN64) 
-#define Platform "x64"
+#define PLatform "x64"
+#if defined(__GNUC__)
+#define INLINE inline
+#endif
 
 #else
-#define Platform "w32"
+#define PLatform "w32"
+#if defined(__GNUC__)
+#define INLINE inline
+#endif
 #endif
 
 #define true 1
@@ -173,7 +179,7 @@
 int OptMaxThreads;
 int RandRange;
 
-#if defined(_WIN32) || defined(_WIN64)
+#if defined(_WIN32) && !defined(__GNUC__) || defined(_WIN64) && !defined(__GNUC__)
 int (*POPCNT)(uint64);
 #endif
 
diff -u fire-22-old/init.c fire-22-new/init.c
--- fire-22-old/init.c	2013-03-23 13:19:58.000000000 +0000
+++ fire-22-new/init.c	2013-03-23 17:13:02.000000000 +0000
@@ -28,12 +28,18 @@
 
 #if defined(__GNUC__) && !defined(__MINGW32__) && !defined(__MINGW64__)
 
-#include <sys/time.h>
-
-static int GetTickCount() {
-    struct timeval t;
-    gettimeofday(&t, NULL);
-    return t.tv_sec*1000 + t.tv_usec/1000;
+#include <sys/time.h>
+
+
+
+static int GetTickCount() {
+
+    struct timeval t;
+
+    gettimeofday(&t, NULL);
+
+    return t.tv_sec*1000 + t.tv_usec/1000;
+
 }
 #endif
 
diff -u fire-22-old/init_gen.h fire-22-new/init_gen.h
--- fire-22-old/init_gen.h	2011-07-05 22:02:00.000000000 +0100
+++ fire-22-new/init_gen.h	2013-03-23 17:21:32.000000000 +0000
@@ -23,105 +23,105 @@
 along with this program. If not, see http://www.gnu.org/licenses/.
 */
 
-static uint32 CaptureValue[16][16];
-void InitCaptureValues()
-    {
-    CaptureValue[wEnumP][bEnumQ] = (0xd0 << 24) + (0x02 << 20);
-    CaptureValue[wEnumN][bEnumQ] = (0xcf << 24) + (0x02 << 20);
-    CaptureValue[wEnumBL][bEnumQ] = (0xce << 24) + (0x02 << 20);
-    CaptureValue[wEnumBD][bEnumQ] = (0xce << 24) + (0x02 << 20);
-    CaptureValue[wEnumR][bEnumQ] = (0xcd << 24) + (0x02 << 20);
-    CaptureValue[wEnumQ][bEnumQ] = (0xcc << 24) + (0x01 << 20);
-    CaptureValue[wEnumP][bEnumR] = (0xc8 << 24) + (0x02 << 20);
-    CaptureValue[wEnumN][bEnumR] = (0xc7 << 24) + (0x02 << 20);
-    CaptureValue[wEnumBL][bEnumR] = (0xc6 << 24) + (0x02 << 20);
-    CaptureValue[wEnumBD][bEnumR] = (0xc6 << 24) + (0x02 << 20);
-    CaptureValue[wEnumR][bEnumR] = (0xc5 << 24) + (0x01 << 20);
-    CaptureValue[wEnumQ][bEnumR] = (0xc4 << 24) + (0x00 << 20);
-    CaptureValue[wEnumP][bEnumBL] = (0xc0 << 24) + (0x02 << 20);
-    CaptureValue[wEnumN][bEnumBL] = (0xbf << 24) + (0x01 << 20);
-    CaptureValue[wEnumBL][bEnumBL] = (0xbe << 24) + (0x01 << 20);
-    CaptureValue[wEnumBD][bEnumBL] = (0xbe << 24) + (0x01 << 20);
-    CaptureValue[wEnumR][bEnumBL] = (0xbd << 24) + (0x00 << 20);
-    CaptureValue[wEnumQ][bEnumBL] = (0xbc << 24) + (0x00 << 20);
-    CaptureValue[wEnumP][bEnumBD] = (0xc0 << 24) + (0x02 << 20);
-    CaptureValue[wEnumN][bEnumBD] = (0xbf << 24) + (0x01 << 20);
-    CaptureValue[wEnumBL][bEnumBD] = (0xbe << 24) + (0x01 << 20);
-    CaptureValue[wEnumBD][bEnumBD] = (0xbe << 24) + (0x01 << 20);
-    CaptureValue[wEnumR][bEnumBD] = (0xbd << 24) + (0x00 << 20);
-    CaptureValue[wEnumQ][bEnumBD] = (0xbc << 24) + (0x00 << 20);
-    CaptureValue[wEnumP][bEnumN] = (0xb8 << 24) + (0x02 << 20);
-    CaptureValue[wEnumN][bEnumN] = (0xb7 << 24) + (0x01 << 20);
-    CaptureValue[wEnumBL][bEnumN] = (0xb6 << 24) + (0x01 << 20);
-    CaptureValue[wEnumBD][bEnumN] = (0xb6 << 24) + (0x01 << 20);
-    CaptureValue[wEnumR][bEnumN] = (0xb5 << 24) + (0x00 << 20);
-    CaptureValue[wEnumQ][bEnumN] = (0xb4 << 24) + (0x00 << 20);
-    CaptureValue[wEnumP][bEnumP] = (0xb0 << 24) + (0x01 << 20);
-    CaptureValue[wEnumN][bEnumP] = (0xaf << 24) + (0x00 << 20);
-    CaptureValue[wEnumBL][bEnumP] = (0xae << 24) + (0x00 << 20);
-    CaptureValue[wEnumBD][bEnumP] = (0xae << 24) + (0x00 << 20);
-    CaptureValue[wEnumR][bEnumP] = (0xad << 24) + (0x00 << 20);
-    CaptureValue[wEnumQ][bEnumP] = (0xac << 24) + (0x00 << 20);
-    CaptureValue[wEnumK][bEnumQ] = (0xcb << 24) + (0x03 << 20);
-    CaptureValue[wEnumK][bEnumR] = (0xc3 << 24) + (0x03 << 20);
-    CaptureValue[wEnumK][bEnumBL] = (0xbb << 24) + (0x03 << 20);
-    CaptureValue[wEnumK][bEnumBD] = (0xbb << 24) + (0x03 << 20);
-    CaptureValue[wEnumK][bEnumN] = (0xb3 << 24) + (0x03 << 20);
-    CaptureValue[wEnumK][bEnumP] = (0xab << 24) + (0x03 << 20);
-    CaptureValue[wEnumK][0] = (0x07 << 24) + (0x00 << 15);
-    CaptureValue[wEnumP][0] = (0x06 << 24) + (0x01 << 15);
-    CaptureValue[wEnumN][0] = (0x05 << 24) + (0x01 << 15);
-    CaptureValue[wEnumBL][0] = (0x04 << 24) + (0x01 << 15);
-    CaptureValue[wEnumBD][0] = (0x04 << 24) + (0x01 << 15);
-    CaptureValue[wEnumR][0] = (0x03 << 24) + (0x01 << 15);
-    CaptureValue[wEnumQ][0] = (0x02 << 24) + (0x01 << 15);
-    CaptureValue[bEnumP][wEnumQ] = (0xd0 << 24) + (0x02 << 20);
-    CaptureValue[bEnumN][wEnumQ] = (0xcf << 24) + (0x02 << 20);
-    CaptureValue[bEnumBL][wEnumQ] = (0xce << 24) + (0x02 << 20);
-    CaptureValue[bEnumBD][wEnumQ] = (0xce << 24) + (0x02 << 20);
-    CaptureValue[bEnumR][wEnumQ] = (0xcd << 24) + (0x02 << 20);
-    CaptureValue[bEnumQ][wEnumQ] = (0xcc << 24) + (0x01 << 20);
-    CaptureValue[bEnumP][wEnumR] = (0xc8 << 24) + (0x02 << 20);
-    CaptureValue[bEnumN][wEnumR] = (0xc7 << 24) + (0x02 << 20);
-    CaptureValue[bEnumBL][wEnumR] = (0xc6 << 24) + (0x02 << 20);
-    CaptureValue[bEnumBD][wEnumR] = (0xc6 << 24) + (0x02 << 20);
-    CaptureValue[bEnumR][wEnumR] = (0xc5 << 24) + (0x01 << 20);
-    CaptureValue[bEnumQ][wEnumR] = (0xc4 << 24) + (0x00 << 20);
-    CaptureValue[bEnumP][wEnumBL] = (0xc0 << 24) + (0x02 << 20);
-    CaptureValue[bEnumN][wEnumBL] = (0xbf << 24) + (0x01 << 20);
-    CaptureValue[bEnumBL][wEnumBL] = (0xbe << 24) + (0x01 << 20);
-    CaptureValue[bEnumBD][wEnumBL] = (0xbe << 24) + (0x01 << 20);
-    CaptureValue[bEnumR][wEnumBL] = (0xbd << 24) + (0x00 << 20);
-    CaptureValue[bEnumQ][wEnumBL] = (0xbc << 24) + (0x00 << 20);
-    CaptureValue[bEnumP][wEnumBD] = (0xc0 << 24) + (0x02 << 20);
-    CaptureValue[bEnumN][wEnumBD] = (0xbf << 24) + (0x01 << 20);
-    CaptureValue[bEnumBL][wEnumBD] = (0xbe << 24) + (0x01 << 20);
-    CaptureValue[bEnumBD][wEnumBD] = (0xbe << 24) + (0x01 << 20);
-    CaptureValue[bEnumR][wEnumBD] = (0xbd << 24) + (0x00 << 20);
-    CaptureValue[bEnumQ][wEnumBD] = (0xbc << 24) + (0x00 << 20);
-    CaptureValue[bEnumP][wEnumN] = (0xb8 << 24) + (0x02 << 20);
-    CaptureValue[bEnumN][wEnumN] = (0xb7 << 24) + (0x01 << 20);
-    CaptureValue[bEnumBL][wEnumN] = (0xb6 << 24) + (0x01 << 20);
-    CaptureValue[bEnumBD][wEnumN] = (0xb6 << 24) + (0x01 << 20);
-    CaptureValue[bEnumR][wEnumN] = (0xb5 << 24) + (0x00 << 20);
-    CaptureValue[bEnumQ][wEnumN] = (0xb4 << 24) + (0x00 << 20);
-    CaptureValue[bEnumP][wEnumP] = (0xb0 << 24) + (0x01 << 20);
-    CaptureValue[bEnumN][wEnumP] = (0xaf << 24) + (0x00 << 20);
-    CaptureValue[bEnumBL][wEnumP] = (0xae << 24) + (0x00 << 20);
-    CaptureValue[bEnumBD][wEnumP] = (0xae << 24) + (0x00 << 20);
-    CaptureValue[bEnumR][wEnumP] = (0xad << 24) + (0x00 << 20);
-    CaptureValue[bEnumQ][wEnumP] = (0xac << 24) + (0x00 << 20);
-    CaptureValue[bEnumK][wEnumQ] = (0xcb << 24) + (0x03 << 20);
-    CaptureValue[bEnumK][wEnumR] = (0xc3 << 24) + (0x03 << 20);
-    CaptureValue[bEnumK][wEnumBL] = (0xbb << 24) + (0x03 << 20);
-    CaptureValue[bEnumK][wEnumBD] = (0xbb << 24) + (0x03 << 20);
-    CaptureValue[bEnumK][wEnumN] = (0xb3 << 24) + (0x03 << 20);
-    CaptureValue[bEnumK][wEnumP] = (0xab << 24) + (0x03 << 20);
-    CaptureValue[bEnumK][0] = (0x07 << 24) + (0x00 << 15);
-    CaptureValue[bEnumP][0] = (0x06 << 24) + (0x01 << 15);
-    CaptureValue[bEnumN][0] = (0x05 << 24) + (0x01 << 15);
-    CaptureValue[bEnumBL][0] = (0x04 << 24) + (0x01 << 15);
-    CaptureValue[bEnumBD][0] = (0x04 << 24) + (0x01 << 15);
-    CaptureValue[bEnumR][0] = (0x03 << 24) + (0x01 << 15);
-    CaptureValue[bEnumQ][0] = (0x02 << 24) + (0x01 << 15);
+static uint32 CaptureValue[16][16];
+void InitCaptureValues()
+    {
+    CaptureValue[wEnumP][bEnumQ] = (0xd0 << 24) + (0x02 << 20);
+    CaptureValue[wEnumN][bEnumQ] = (0xcf << 24) + (0x02 << 20);
+    CaptureValue[wEnumBL][bEnumQ] = (0xce << 24) + (0x02 << 20);
+    CaptureValue[wEnumBD][bEnumQ] = (0xce << 24) + (0x02 << 20);
+    CaptureValue[wEnumR][bEnumQ] = (0xcd << 24) + (0x02 << 20);
+    CaptureValue[wEnumQ][bEnumQ] = (0xcc << 24) + (0x01 << 20);
+    CaptureValue[wEnumP][bEnumR] = (0xc8 << 24) + (0x02 << 20);
+    CaptureValue[wEnumN][bEnumR] = (0xc7 << 24) + (0x02 << 20);
+    CaptureValue[wEnumBL][bEnumR] = (0xc6 << 24) + (0x02 << 20);
+    CaptureValue[wEnumBD][bEnumR] = (0xc6 << 24) + (0x02 << 20);
+    CaptureValue[wEnumR][bEnumR] = (0xc5 << 24) + (0x01 << 20);
+    CaptureValue[wEnumQ][bEnumR] = (0xc4 << 24) + (0x00 << 20);
+    CaptureValue[wEnumP][bEnumBL] = (0xc0 << 24) + (0x02 << 20);
+    CaptureValue[wEnumN][bEnumBL] = (0xbf << 24) + (0x01 << 20);
+    CaptureValue[wEnumBL][bEnumBL] = (0xbe << 24) + (0x01 << 20);
+    CaptureValue[wEnumBD][bEnumBL] = (0xbe << 24) + (0x01 << 20);
+    CaptureValue[wEnumR][bEnumBL] = (0xbd << 24) + (0x00 << 20);
+    CaptureValue[wEnumQ][bEnumBL] = (0xbc << 24) + (0x00 << 20);
+    CaptureValue[wEnumP][bEnumBD] = (0xc0 << 24) + (0x02 << 20);
+    CaptureValue[wEnumN][bEnumBD] = (0xbf << 24) + (0x01 << 20);
+    CaptureValue[wEnumBL][bEnumBD] = (0xbe << 24) + (0x01 << 20);
+    CaptureValue[wEnumBD][bEnumBD] = (0xbe << 24) + (0x01 << 20);
+    CaptureValue[wEnumR][bEnumBD] = (0xbd << 24) + (0x00 << 20);
+    CaptureValue[wEnumQ][bEnumBD] = (0xbc << 24) + (0x00 << 20);
+    CaptureValue[wEnumP][bEnumN] = (0xb8 << 24) + (0x02 << 20);
+    CaptureValue[wEnumN][bEnumN] = (0xb7 << 24) + (0x01 << 20);
+    CaptureValue[wEnumBL][bEnumN] = (0xb6 << 24) + (0x01 << 20);
+    CaptureValue[wEnumBD][bEnumN] = (0xb6 << 24) + (0x01 << 20);
+    CaptureValue[wEnumR][bEnumN] = (0xb5 << 24) + (0x00 << 20);
+    CaptureValue[wEnumQ][bEnumN] = (0xb4 << 24) + (0x00 << 20);
+    CaptureValue[wEnumP][bEnumP] = (0xb0 << 24) + (0x01 << 20);
+    CaptureValue[wEnumN][bEnumP] = (0xaf << 24) + (0x00 << 20);
+    CaptureValue[wEnumBL][bEnumP] = (0xae << 24) + (0x00 << 20);
+    CaptureValue[wEnumBD][bEnumP] = (0xae << 24) + (0x00 << 20);
+    CaptureValue[wEnumR][bEnumP] = (0xad << 24) + (0x00 << 20);
+    CaptureValue[wEnumQ][bEnumP] = (0xac << 24) + (0x00 << 20);
+    CaptureValue[wEnumK][bEnumQ] = (0xcb << 24) + (0x03 << 20);
+    CaptureValue[wEnumK][bEnumR] = (0xc3 << 24) + (0x03 << 20);
+    CaptureValue[wEnumK][bEnumBL] = (0xbb << 24) + (0x03 << 20);
+    CaptureValue[wEnumK][bEnumBD] = (0xbb << 24) + (0x03 << 20);
+    CaptureValue[wEnumK][bEnumN] = (0xb3 << 24) + (0x03 << 20);
+    CaptureValue[wEnumK][bEnumP] = (0xab << 24) + (0x03 << 20);
+    CaptureValue[wEnumK][0] = (0x07 << 24) + (0x00 << 15);
+    CaptureValue[wEnumP][0] = (0x06 << 24) + (0x01 << 15);
+    CaptureValue[wEnumN][0] = (0x05 << 24) + (0x01 << 15);
+    CaptureValue[wEnumBL][0] = (0x04 << 24) + (0x01 << 15);
+    CaptureValue[wEnumBD][0] = (0x04 << 24) + (0x01 << 15);
+    CaptureValue[wEnumR][0] = (0x03 << 24) + (0x01 << 15);
+    CaptureValue[wEnumQ][0] = (0x02 << 24) + (0x01 << 15);
+    CaptureValue[bEnumP][wEnumQ] = (0xd0 << 24) + (0x02 << 20);
+    CaptureValue[bEnumN][wEnumQ] = (0xcf << 24) + (0x02 << 20);
+    CaptureValue[bEnumBL][wEnumQ] = (0xce << 24) + (0x02 << 20);
+    CaptureValue[bEnumBD][wEnumQ] = (0xce << 24) + (0x02 << 20);
+    CaptureValue[bEnumR][wEnumQ] = (0xcd << 24) + (0x02 << 20);
+    CaptureValue[bEnumQ][wEnumQ] = (0xcc << 24) + (0x01 << 20);
+    CaptureValue[bEnumP][wEnumR] = (0xc8 << 24) + (0x02 << 20);
+    CaptureValue[bEnumN][wEnumR] = (0xc7 << 24) + (0x02 << 20);
+    CaptureValue[bEnumBL][wEnumR] = (0xc6 << 24) + (0x02 << 20);
+    CaptureValue[bEnumBD][wEnumR] = (0xc6 << 24) + (0x02 << 20);
+    CaptureValue[bEnumR][wEnumR] = (0xc5 << 24) + (0x01 << 20);
+    CaptureValue[bEnumQ][wEnumR] = (0xc4 << 24) + (0x00 << 20);
+    CaptureValue[bEnumP][wEnumBL] = (0xc0 << 24) + (0x02 << 20);
+    CaptureValue[bEnumN][wEnumBL] = (0xbf << 24) + (0x01 << 20);
+    CaptureValue[bEnumBL][wEnumBL] = (0xbe << 24) + (0x01 << 20);
+    CaptureValue[bEnumBD][wEnumBL] = (0xbe << 24) + (0x01 << 20);
+    CaptureValue[bEnumR][wEnumBL] = (0xbd << 24) + (0x00 << 20);
+    CaptureValue[bEnumQ][wEnumBL] = (0xbc << 24) + (0x00 << 20);
+    CaptureValue[bEnumP][wEnumBD] = (0xc0 << 24) + (0x02 << 20);
+    CaptureValue[bEnumN][wEnumBD] = (0xbf << 24) + (0x01 << 20);
+    CaptureValue[bEnumBL][wEnumBD] = (0xbe << 24) + (0x01 << 20);
+    CaptureValue[bEnumBD][wEnumBD] = (0xbe << 24) + (0x01 << 20);
+    CaptureValue[bEnumR][wEnumBD] = (0xbd << 24) + (0x00 << 20);
+    CaptureValue[bEnumQ][wEnumBD] = (0xbc << 24) + (0x00 << 20);
+    CaptureValue[bEnumP][wEnumN] = (0xb8 << 24) + (0x02 << 20);
+    CaptureValue[bEnumN][wEnumN] = (0xb7 << 24) + (0x01 << 20);
+    CaptureValue[bEnumBL][wEnumN] = (0xb6 << 24) + (0x01 << 20);
+    CaptureValue[bEnumBD][wEnumN] = (0xb6 << 24) + (0x01 << 20);
+    CaptureValue[bEnumR][wEnumN] = (0xb5 << 24) + (0x00 << 20);
+    CaptureValue[bEnumQ][wEnumN] = (0xb4 << 24) + (0x00 << 20);
+    CaptureValue[bEnumP][wEnumP] = (0xb0 << 24) + (0x01 << 20);
+    CaptureValue[bEnumN][wEnumP] = (0xaf << 24) + (0x00 << 20);
+    CaptureValue[bEnumBL][wEnumP] = (0xae << 24) + (0x00 << 20);
+    CaptureValue[bEnumBD][wEnumP] = (0xae << 24) + (0x00 << 20);
+    CaptureValue[bEnumR][wEnumP] = (0xad << 24) + (0x00 << 20);
+    CaptureValue[bEnumQ][wEnumP] = (0xac << 24) + (0x00 << 20);
+    CaptureValue[bEnumK][wEnumQ] = (0xcb << 24) + (0x03 << 20);
+    CaptureValue[bEnumK][wEnumR] = (0xc3 << 24) + (0x03 << 20);
+    CaptureValue[bEnumK][wEnumBL] = (0xbb << 24) + (0x03 << 20);
+    CaptureValue[bEnumK][wEnumBD] = (0xbb << 24) + (0x03 << 20);
+    CaptureValue[bEnumK][wEnumN] = (0xb3 << 24) + (0x03 << 20);
+    CaptureValue[bEnumK][wEnumP] = (0xab << 24) + (0x03 << 20);
+    CaptureValue[bEnumK][0] = (0x07 << 24) + (0x00 << 15);
+    CaptureValue[bEnumP][0] = (0x06 << 24) + (0x01 << 15);
+    CaptureValue[bEnumN][0] = (0x05 << 24) + (0x01 << 15);
+    CaptureValue[bEnumBL][0] = (0x04 << 24) + (0x01 << 15);
+    CaptureValue[bEnumBD][0] = (0x04 << 24) + (0x01 << 15);
+    CaptureValue[bEnumR][0] = (0x03 << 24) + (0x01 << 15);
+    CaptureValue[bEnumQ][0] = (0x02 << 24) + (0x01 << 15);
     }
\ No newline at end of file
diff -u fire-22-old/input.c fire-22-new/input.c
--- fire-22-old/input.c	2013-03-23 12:22:16.000000000 +0000
+++ fire-22-new/input.c	2013-03-23 17:13:02.000000000 +0000
@@ -200,14 +200,14 @@
         {
 		"spin", "check", "button", "string", "combo"
         };
-	Send("id name %s %s %s\n", Engine, Vers, Platform);
+	Send("id name %s %s %s\n", Engine, Vers, PLatform);
     Send("id author Kranium\n");
 
 #ifdef Log
 	if (WriteLog)
 		{
 		log_file = fopen(log_filename, "a");
-		fprintf(log_file, "id name %s %s %s\n", Engine, Vers, Platform);
+		fprintf(log_file, "id name %s %s %s\n", Engine, Vers, PLatform);
 		fprintf(log_file, "id author Kranium\n");
 		close_log();
 		}
@@ -668,7 +668,7 @@
     SuppressInput = false;
     }
 
-#ifdef WINDOWS
+#if defined(_WIN32) || defined(_WIN64)
 #include <io.h>
 #include <conio.h>
 void Input(typePos *Position)
Only in fire-22-new: Logfile001.log
diff -u fire-22-old/main.c fire-22-new/main.c
--- fire-22-old/main.c	2013-03-23 13:59:58.000000000 +0000
+++ fire-22-new/main.c	2013-03-23 16:11:28.000000000 +0000
@@ -231,7 +231,7 @@
 		}
 #endif
 
-#undef  LinuxLargePages
+
 #ifdef LinuxLargePages
     LinuxHandleSignals();
 #endif
diff -u fire-22-old/Makefile fire-22-new/Makefile
--- fire-22-old/Makefile	2013-03-23 14:04:00.000000000 +0000
+++ fire-22-new/Makefile	2013-03-23 18:48:26.000000000 +0000
@@ -4,6 +4,7 @@
 
 LIBS = -lpthread
 
+
 default: fire
 
 OFILES = main.o \
@@ -73,19 +74,18 @@
 	rm -f *.o  fire
 
 .c.o:   main.c
-	gcc -c -g $*.c  -Wall -w -pipe  -s -std=c99 -DNDEBUG -Ofast -static  \
-                       -flto -fwhole-program -finline-functions -fprefetch-loop-arrays  \
-                      -Wfatal-errors -DHasPreFetch -DRobboBases  -mtune=native \
-                    
+	gcc -c -g $*.c  -Wall -w -pipe  -s -std=c99 -DNDEBUG -DHAVE_STRUCT_TIMESPEC -Ofast -static  \
+                      -flto -fwhole-program -finline-functions -fprefetch-loop-arrays  \
+                      -Wfatal-errors -mtune=native -DHasPreFetch -DRobboBases \
+                      
+                         
 
 # for popcount (AMD)          =   -march=amdfam10 -mtune=amdfam10 -mpopcnt -DHasPopCNT
 # for popcount (INTEL)        =   -msse4.2 -march=corei7 -mtune=corei7 -mpopcnt -DHasPopCNT
 
-# for RobboBase support  =  -DRobboBases
-
-# for Windows builds (otherwise Linux)  =  -DWINDOWS
+# for RobboBase support       =  -DRobboBases
 
-# for SSE cpus (and above)  =  -DHasPreFetch
+# for SSE cpus (and above)    =  -DHasPreFetch -msse
 
 
 
diff -u fire-22-old/make_move.c fire-22-new/make_move.c
--- fire-22-old/make_move.c	2011-07-05 22:20:06.000000000 +0100
+++ fire-22-new/make_move.c	2013-03-23 16:18:04.000000000 +0000
@@ -27,6 +27,11 @@
 #include "make_unmake.h"
 #include "material_value.h"
 
+#if defined(__GNUC__)
+#define INLINE inline
+#endif
+
+
 #define RevCastle(Pos) (Pos)->Dyn->reversible = 0
 
 typedef enum
diff -u fire-22-old/mem_handler.c fire-22-new/mem_handler.c
--- fire-22-old/mem_handler.c	2013-03-23 13:47:50.000000000 +0000
+++ fire-22-new/mem_handler.c	2013-03-23 17:14:58.000000000 +0000
@@ -25,7 +25,7 @@
 
 #include "fire.h"
 
-#undef LinuxLargePages
+
 
 #if defined(LinuxLargePages)
 #include <sys/ipc.h>
diff -u fire-22-old/null_move.h fire-22-new/null_move.h
--- fire-22-old/null_move.h	2011-07-05 22:20:06.000000000 +0100
+++ fire-22-new/null_move.h	2013-03-23 16:13:46.000000000 +0000
@@ -23,6 +23,11 @@
 along with this program. If not, see http://www.gnu.org/licenses/.
 */
 
+#if defined(__GNUC__)
+#define INLINE inline
+#endif
+
+
 static INLINE void MakeNull(typePos *Position)
     {
     Position->nodes++;
diff -u fire-22-old/robbo_init_IO.c fire-22-new/robbo_init_IO.c
--- fire-22-old/robbo_init_IO.c	2013-03-23 12:30:28.000000000 +0000
+++ fire-22-new/robbo_init_IO.c	2013-03-23 17:14:56.000000000 +0000
@@ -852,7 +852,7 @@
     return true;
     }
 
-#ifdef WINDOWS
+#if defined(_WIN32) || defined(_WIN64)
 #include <sys/types.h>
 #include <sys/stat.h>
 int Stat(char *filename)
@@ -1041,7 +1041,7 @@
     fclose(F);
     return true;
     }
-#ifdef WINDOWS
+#if defined(_WIN32) || defined(_WIN64)
 void GetTotalBase(char *A)
     {
     char B[1024];
diff -u fire-22-old/robbo_triple_init.c fire-22-new/robbo_triple_init.c
--- fire-22-old/robbo_triple_init.c	2013-03-23 12:31:26.000000000 +0000
+++ fire-22-new/robbo_triple_init.c	2013-03-23 17:16:50.000000000 +0000
@@ -23,6 +23,13 @@
 along with this program. If not, see http://www.gnu.org/licenses/.
 */
 
+#if defined(__GNUC__)
+#include <fcntl.h>
+#include <string.h>
+#include <sys/types.h>
+#include <dirent.h>
+#endif
+
 #include "fire.h"
 #ifdef RobboBases
 #include "robbo_totalbase.h"
@@ -269,7 +276,7 @@
     triple = TableTripleBases + NumTripleBases;
     TripleUtility(triple, Temp);
     strcpy(triple->DirNome, DIR);
-#ifndef WINDOWS
+#if !defined(_WIN32) && !defined(_WIN64)
     strcat(triple->DirNome, "/");
 #else
     strcat(triple->DirNome, "\\");
@@ -516,7 +523,7 @@
 
     }
 
-#ifndef WINDOWS
+#if !defined(_WIN32) && !defined(_WIN64)
 void ReFactorDirectoryNaming(char *S)
     {
     char T[1024];
@@ -813,7 +820,7 @@
             TripleUtility(triple, NOME);
             strcpy(triple->DirNome, DIR);
 
-#ifndef WINDOWS
+#if !defined(_WIN32) && !defined(_WIN64)
             strcat(triple->DirNome, "/");
 #else
             strcat(triple->DirNome, "\\");
@@ -900,7 +907,7 @@
     return true;
     }
 
-#ifdef WINDOWS
+#if defined(_WIN32) || defined(_WIN64)
 void GetTripleBase(char *A)
     {
     char B[1024];
@@ -953,10 +960,7 @@
 		TripleEmit();
     }
 #else
-#include <fcntl.h>
-#include <dirent.h>
-#include <string.h>
-#include <sys/types.h>
+
 void GetTripleBase(char *A)
     {
     DIR *DIR;
diff -u fire-22-old/signals.c fire-22-new/signals.c
--- fire-22-old/signals.c	2013-03-23 13:58:02.000000000 +0000
+++ fire-22-new/signals.c	2013-03-23 17:17:36.000000000 +0000
@@ -25,8 +25,6 @@
 
 #include "fire.h"
 
-#undef LinuxLargePages
-
 #if defined(LinuxLargePages)
 #include <signal.h>
 static MutexType DeletionLock[1];
diff -u fire-22-old/SMP.c fire-22-new/SMP.c
--- fire-22-old/SMP.c	2013-03-23 12:34:08.000000000 +0000
+++ fire-22-new/SMP.c	2013-03-23 17:17:56.000000000 +0000
@@ -23,6 +23,8 @@
 along with this program. If not, see http://www.gnu.org/licenses/.
 */
 
+
+
 #include "fire.h"
 #define DoLocked(x) { Lock (SMP); (x); UnLock (SMP); }
 #define MaxSplit 8
@@ -116,6 +118,12 @@
     UnLock(Position->parent->padlock);
     UnLock(SMP);
     }
+
+#if defined(__GNUC__)
+#define INLINE inline
+#endif
+
+
 static INLINE void SMPBadHistory(typePos *Position, uint32 m, SplitPoint *sp)
     {
     if ((Position->Dyn + 1)->cp == 0 && MoveHistory(m))
@@ -204,7 +212,7 @@
             {
             if (Die[cpu])
                 return;
-#ifdef WINDOWS
+#if defined(_WIN32) || defined(_WIN64)
             WaitForLock(PThreadCondWait[cpu], PThreadCondMutex[cpu]);
 #else
             Lock(&PThreadCondMutex[cpu]);
diff -u fire-22-old/SMP_init.c fire-22-new/SMP_init.c
--- fire-22-old/SMP_init.c	2013-03-23 12:34:20.000000000 +0000
+++ fire-22-new/SMP_init.c	2013-03-23 17:18:44.000000000 +0000
@@ -29,8 +29,9 @@
 
 void NanoSleep(int x)
     {
-#ifdef WINDOWS
+#if defined(_WIN32) || defined(_WIN64)
     Sleep(x / 1000000);
+
 #else
     struct timespec TS[1];
     TS->tv_sec = 0;
@@ -131,7 +132,7 @@
     int cpu;
     for (cpu = 0; cpu < CurrCPUS; cpu++)
         {
-#ifndef WINDOWS
+#if !defined(_WIN32) && !defined(_WIN64)
         LockDestroy(&PThreadCondMutex[cpu]);
 #endif
         if (cpu > 0)
@@ -141,7 +142,7 @@
             PThreadJoin(PThread[cpu]);
             Die[cpu] = false;
             }
-#ifndef WINDOWS
+#if !defined(_WIN32) && !defined(_WIN64)
         LockInit(&PThreadCondMutex[cpu]);
 #endif
         }
@@ -151,7 +152,7 @@
     while (!Destroyed) { }
 		{
 		}
-#ifndef WINDOWS
+#if !defined(_WIN32) && !defined(_WIN64)
     LockDestroy(Wakeup_Lock_IO);
 #endif
     Destroyed = false;
diff -u fire-22-old/SMP_search.c fire-22-new/SMP_search.c
--- fire-22-old/SMP_search.c	2013-03-23 12:34:34.000000000 +0000
+++ fire-22-new/SMP_search.c	2013-03-23 16:25:14.000000000 +0000
@@ -26,6 +26,12 @@
 #ifndef SMPSearch
 #define SMPSearch
 #include "fire.h"
+
+#if defined(__GNUC__)
+#define INLINE inline
+#endif
+
+
 static INLINE void SMPBadHistory(typePos *Pos, uint32 m, SplitPoint *sp)
     {
     if ((Pos->Dyn + 1)->cp == 0 && MoveHistory(m))
diff -u fire-22-old/unmake_move.c fire-22-new/unmake_move.c
--- fire-22-old/unmake_move.c	2011-07-05 22:20:04.000000000 +0100
+++ fire-22-new/unmake_move.c	2013-03-23 16:26:10.000000000 +0000
@@ -26,6 +26,10 @@
 #include "fire.h"
 #include "make_unmake.h"
 
+#if defined(__GNUC__)
+#define INLINE inline
+#endif
+
 static INLINE void UnMakeWhiteOO(typePos *Position, int to)
     {
     if (to == G1)
diff -u fire-22-old/utility.c fire-22-new/utility.c
--- fire-22-old/utility.c	2013-03-23 13:22:10.000000000 +0000
+++ fire-22-new/utility.c	2013-03-23 17:08:58.000000000 +0000
@@ -25,12 +25,17 @@
 
 #include "fire.h"
 #include "material_value.h"
-#if defined(_WIN32) || defined(_WIN64)
-#include <intrin.h>
-#else
+
+#if defined(__GNUC__)
 #include <unistd.h>
+#if !defined(_WIN32) && !defined(_WIN64)
 #include <sys/select.h>
+#else
+#include <winsock2.h>
+#endif
 #define FD_Zero FD_ZERO
+#else
+#include <intrin.h>
 #endif
 
 #define Tweak (0x74d3c012a8bf965e)
@@ -183,7 +188,7 @@
         BoardIsOk = false;
     BoardIsOk = true;
     }
-#ifdef WINDOWS
+#if defined(_WIN32) || defined(_WIN64)
 #include <time.h>
 bool TryInput()
     {
@@ -345,7 +350,7 @@
     }
 void ShowBanner()
     {
-    char *startup_banner = "" Engine " " Vers " " Platform "\n"
+    char *startup_banner = "" Engine " " Vers " " PLatform "\n"
         "by Kranium, based on Ippolit\n"
         "compiled by NS\n"
         "" __DATE__ " " __TIME__ "\n\n";
@@ -448,7 +453,7 @@
 void SetPOPCNT()
 	{
   	
-#if defined(_WIN32) || defined(_WIN64)
+#if defined(_WIN32) && !defined(__GNUC__) || defined(_WIN64) && !defined(__GNUC__)
 int CPUInfo[4] = {-1};
   	__cpuid(CPUInfo, 0x00000001);
   	HasPopcnt = (CPUInfo[2] >> 23) & 1;
@@ -482,7 +487,7 @@
     time(&now);
     tnow = *localtime(&now);
     strftime(buf, 32, "%d%b-%H%M", &tnow);
-    sprintf(log_filename, "%s %s %s %s.txt", Engine, Vers, Platform, buf);
+    sprintf(log_filename, "%s %s %s %s.txt", Engine, Vers, PLatform, buf);
     log_file = fopen(log_filename, "wt");
 	close_log();
 	return false;
diff -u fire-22-old/win32bits.h fire-22-new/win32bits.h
--- fire-22-old/win32bits.h	2013-03-23 12:11:26.000000000 +0000
+++ fire-22-new/win32bits.h	2013-03-23 16:29:14.000000000 +0000
@@ -22,11 +22,12 @@
 You should have received a copy of the GNU General Public License
 along with this program. If not, see http://www.gnu.org/licenses/.
 */
-
-#if defined(_WIN32)
+#if defined(_WIN32) && defined(_MSC_VER)
 
 static int BSF(UINT64 x)
     {
+
+		
 		{
 		_asm
             {
@@ -82,4 +83,8 @@
 	return ((v1 * 0x01010101) >> 24) + ((v2 * 0x01010101) >> 24);
 	}
 
+#else
+
+#include "bits.h"
+
 #endif
diff -u fire-22-old/win64bits.h fire-22-new/win64bits.h
--- fire-22-old/win64bits.h	2013-03-23 12:11:56.000000000 +0000
+++ fire-22-new/win64bits.h	2013-03-23 18:26:30.000000000 +0000
@@ -23,7 +23,12 @@
 along with this program. If not, see http://www.gnu.org/licenses/.
 */
 
-#if defined(_WIN64)
+#if defined(__GNUC__)
+
+#include "bits.h"
+
+#elif defined(_WIN64) && defined(_MSC_VER)
+
 static INLINE int BSF(UINT64 x)
     {
     int r;
@@ -36,22 +41,8 @@
     _BitScanReverse64(&r, x);
     return r;
     }
-#else
-static int BSF(UINT64 x)
-    {
-    _asm
-        {
-        bsf rax, x
-        }
-    }
-static int BSR(UINT64 x)
-    {
-    _asm
-        {
-        bsr rax, x
-        }
-    }
-#endif
+
+
 static INLINE int PopcntHard (UINT64 x)
 	{
   	_asm
@@ -67,4 +58,7 @@
   	return (w * 0x0101010101010101ull) >> 56;
 	}
 
-#endif
\ No newline at end of file
+#endif
+
+
+
diff -u fire-22-old/win-linux.h fire-22-new/win-linux.h
--- fire-22-old/win-linux.h	2013-03-23 12:14:04.000000000 +0000
+++ fire-22-new/win-linux.h	2013-03-23 18:24:14.000000000 +0000
@@ -23,7 +23,7 @@
 along with this program. If not, see http://www.gnu.org/licenses/.
 */
 
-#ifdef WINDOWS
+#if defined(_WIN32) || defined(_WIN64)
 #include <windows.h>
 #define NomeWindows
 
@@ -120,5 +120,5 @@
 #define IvanThread(A) void* SMPThread (void* A)
 #define IOThread(A) void* io_thread (void* A)
 #define VoidStarType void*
-#define LinuxLargePages true
+//#define LinuxLargePages false
 #endif
\ No newline at end of file
